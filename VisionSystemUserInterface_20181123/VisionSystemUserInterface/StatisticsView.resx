<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="statisticsControl.SystemShift" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAE9WaXNpb25TeXN0ZW1DbGFzc0xpYnJhcnksIFZlcnNpb249MS4w
        LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsBQEAAAAkVmlzaW9uU3lzdGVt
        Q2xhc3NMaWJyYXJ5LkNsYXNzLlNoaWZ0CgAAAA5NaW5TaGlmdE51bWJlcg5NYXhTaGlmdE51bWJlcg1p
        Q2FtZXJhTnVtYmVyClNoaWZ0U3RhdGULRGF0YU9mU2hpZnQWU2luZ2xlU2hpZnRDaGFuZ2VTdGF0ZRRT
        aGlmdFRpbWVDaGFuZ2VTdGF0ZQ1TaGlmdERhdGFQYXRoElN0YXRpc3RpY3NEYXRhUGF0aAtTaGlmdENo
        YW5nZQAAAAAEAAABAQMICAgBKVZpc2lvblN5c3RlbUNsYXNzTGlicmFyeS5TdHJ1Y3QuU2hpZnREYXRh
        AgAAAAgBE1N5c3RlbS5FdmVudEhhbmRsZXICAAAAAQAAABgAAAAAAAAAAAX9////KVZpc2lvblN5c3Rl
        bUNsYXNzTGlicmFyeS5TdHJ1Y3QuU2hpZnREYXRhBgAAAAxDdXJyZW50SW5kZXgPQ3VycmVudEluZGV4
        T2xkCFRpbWVEYXRhC1RpbWVEYXRhT2xkF0luZm9ybWF0aW9uT2ZTdGF0aXN0aWNzHEN1cnJlbnRTdGF0
        aXN0aWNzSW5mb3JtYXRpb24AAAQEBAQICCtWaXNpb25TeXN0ZW1DbGFzc0xpYnJhcnkuU3RydWN0LlNo
        aWZ0VGltZVtdAgAAACtWaXNpb25TeXN0ZW1DbGFzc0xpYnJhcnkuU3RydWN0LlNoaWZ0VGltZVtdAgAA
        ADdWaXNpb25TeXN0ZW1DbGFzc0xpYnJhcnkuU3RydWN0LlN0YXRpc3RpY3NJbmZvcm1hdGlvbltdAgAA
        ADVWaXNpb25TeXN0ZW1DbGFzc0xpYnJhcnkuU3RydWN0LlN0YXRpc3RpY3NJbmZvcm1hdGlvbgIAAAAC
        AAAAAAAAAAAAAAAKCgoF/P///zVWaXNpb25TeXN0ZW1DbGFzc0xpYnJhcnkuU3RydWN0LlN0YXRpc3Rp
        Y3NJbmZvcm1hdGlvbgMAAAAMQ3VycmVudEluZGV4CFRpbWVEYXRhEERhdGFPZlN0YXRpc3RpY3MABAQI
        K1Zpc2lvblN5c3RlbUNsYXNzTGlicmFyeS5TdHJ1Y3QuU2hpZnRUaW1lW10CAAAAMFZpc2lvblN5c3Rl
        bUNsYXNzTGlicmFyeS5TdHJ1Y3QuU3RhdGlzdGljc0RhdGFbXQIAAAACAAAAAAAAAAoKAAAAAAAGBQAA
        AAAJBQAAAAoL
</value>
  </data>
</root>